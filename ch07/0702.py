import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, pyqtSlot, QItemSelectionModel, QModelIndex, QFile, QIODevice
from PyQt5.QtGui import QPixmap
from PyQt5.QtSql import QSqlDatabase, QSqlTableModel, QSqlQueryModel, QSqlQuery
from PyQt5.QtWidgets import QStyledItemDelegate, QWidget, QDoubleSpinBox, QAbstractItemView, QFileDialog, QMessageBox, \
    QDataWidgetMapper, QComboBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(744, 494)
        font = QtGui.QFont()
        font.setPointSize(11)
        MainWindow.setFont(font)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.splitter = QtWidgets.QSplitter(self.centralWidget)
        self.splitter.setGeometry(QtCore.QRect(30, 20, 661, 371))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.tableView = QtWidgets.QTableView(self.splitter)
        self.tableView.setAlternatingRowColors(True)
        self.tableView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableView.setObjectName("tableView")
        self.tableView.verticalHeader().setDefaultSectionSize(25)
        self.groupBox = QtWidgets.QGroupBox(self.splitter)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setContentsMargins(11, 11, 11, 11)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.dbEditMemo = QtWidgets.QPlainTextEdit(self.groupBox)
        self.dbEditMemo.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.dbEditMemo.setObjectName("dbEditMemo")
        self.gridLayout.addWidget(self.dbEditMemo, 7, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 5, 0, 1, 1)
        self.dbComboDep = QtWidgets.QComboBox(self.groupBox)
        self.dbComboDep.setObjectName("dbComboDep")
        self.dbComboDep.addItem("")
        self.dbComboDep.addItem("")
        self.dbComboDep.addItem("")
        self.dbComboDep.addItem("")
        self.gridLayout.addWidget(self.dbComboDep, 5, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 6, 0, 1, 1)
        self.dbSpinSalary = QtWidgets.QSpinBox(self.groupBox)
        self.dbSpinSalary.setPrefix("")
        self.dbSpinSalary.setMinimum(1000)
        self.dbSpinSalary.setMaximum(50000)
        self.dbSpinSalary.setSingleStep(100)
        self.dbSpinSalary.setProperty("value", 1000)
        self.dbSpinSalary.setObjectName("dbSpinSalary")
        self.gridLayout.addWidget(self.dbSpinSalary, 6, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 7, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.dbSpinEmpNo = QtWidgets.QSpinBox(self.groupBox)
        self.dbSpinEmpNo.setMinimum(1)
        self.dbSpinEmpNo.setMaximum(10000)
        self.dbSpinEmpNo.setObjectName("dbSpinEmpNo")
        self.gridLayout.addWidget(self.dbSpinEmpNo, 0, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 4, 0, 1, 1)
        self.dbComboProvince = QtWidgets.QComboBox(self.groupBox)
        self.dbComboProvince.setObjectName("dbComboProvince")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.dbComboProvince.addItem("")
        self.gridLayout.addWidget(self.dbComboProvince, 4, 1, 1, 1)
        self.dbEditBirth = QtWidgets.QDateEdit(self.groupBox)
        self.dbEditBirth.setCalendarPopup(True)
        self.dbEditBirth.setDate(QtCore.QDate(2017, 2, 20))
        self.dbEditBirth.setObjectName("dbEditBirth")
        self.gridLayout.addWidget(self.dbEditBirth, 3, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 3, 0, 1, 1)
        self.dbComboSex = QtWidgets.QComboBox(self.groupBox)
        self.dbComboSex.setObjectName("dbComboSex")
        self.dbComboSex.addItem("")
        self.dbComboSex.addItem("")
        self.gridLayout.addWidget(self.dbComboSex, 2, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.dbEditName = QtWidgets.QLineEdit(self.groupBox)
        self.dbEditName.setObjectName("dbEditName")
        self.gridLayout.addWidget(self.dbEditName, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        self.label_13.setObjectName("label_13")
        self.verticalLayout.addWidget(self.label_13)
        self.dbLabPhoto = QtWidgets.QLabel(self.groupBox)
        self.dbLabPhoto.setMinimumSize(QtCore.QSize(150, 0))
        self.dbLabPhoto.setMaximumSize(QtCore.QSize(350, 16777215))
        self.dbLabPhoto.setObjectName("dbLabPhoto")
        self.verticalLayout.addWidget(self.dbLabPhoto)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.horizontalLayout.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 744, 23))
        self.menuBar.setObjectName("menuBar")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.actOpenDB = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/images/open3.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actOpenDB.setIcon(icon)
        self.actOpenDB.setObjectName("actOpenDB")
        self.actQuit = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/images/exit.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actQuit.setIcon(icon1)
        self.actQuit.setObjectName("actQuit")
        self.actRecFirst = QtWidgets.QAction(MainWindow)
        self.actRecFirst.setEnabled(False)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/images/616.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actRecFirst.setIcon(icon2)
        self.actRecFirst.setObjectName("actRecFirst")
        self.actRecPrevious = QtWidgets.QAction(MainWindow)
        self.actRecPrevious.setEnabled(False)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/images/310.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actRecPrevious.setIcon(icon3)
        self.actRecPrevious.setObjectName("actRecPrevious")
        self.actRecNext = QtWidgets.QAction(MainWindow)
        self.actRecNext.setEnabled(False)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/images/312.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actRecNext.setIcon(icon4)
        self.actRecNext.setObjectName("actRecNext")
        self.actRecLast = QtWidgets.QAction(MainWindow)
        self.actRecLast.setEnabled(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/images/630.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actRecLast.setIcon(icon5)
        self.actRecLast.setObjectName("actRecLast")
        self.mainToolBar.addAction(self.actOpenDB)
        self.mainToolBar.addSeparator()
        self.mainToolBar.addAction(self.actRecFirst)
        self.mainToolBar.addAction(self.actRecPrevious)
        self.mainToolBar.addAction(self.actRecNext)
        self.mainToolBar.addAction(self.actRecLast)
        self.mainToolBar.addSeparator()
        self.mainToolBar.addAction(self.actQuit)
        self.label_6.setBuddy(self.dbComboDep)
        self.label_12.setBuddy(self.dbSpinSalary)
        self.label_9.setBuddy(self.dbEditMemo)
        self.label.setBuddy(self.dbSpinEmpNo)
        self.label_7.setBuddy(self.dbComboProvince)
        self.label_5.setBuddy(self.dbEditBirth)
        self.label_3.setBuddy(self.dbComboSex)
        self.label_2.setBuddy(self.dbEditName)

        self.retranslateUi(MainWindow)
        self.actQuit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Demo7_2, QSqlQueryModel的使用"))
        self.label_6.setText(_translate("MainWindow", "部  门"))
        self.dbComboDep.setItemText(0, _translate("MainWindow", "销售部"))
        self.dbComboDep.setItemText(1, _translate("MainWindow", "技术部"))
        self.dbComboDep.setItemText(2, _translate("MainWindow", "生产部"))
        self.dbComboDep.setItemText(3, _translate("MainWindow", "行政部"))
        self.label_12.setText(_translate("MainWindow", "工  资"))
        self.label_9.setText(_translate("MainWindow", "备   注"))
        self.label.setText(_translate("MainWindow", "工  号"))
        self.label_7.setText(_translate("MainWindow", "出生省份"))
        self.dbComboProvince.setItemText(0, _translate("MainWindow", "北京"))
        self.dbComboProvince.setItemText(1, _translate("MainWindow", "上海"))
        self.dbComboProvince.setItemText(2, _translate("MainWindow", "天津"))
        self.dbComboProvince.setItemText(3, _translate("MainWindow", "重庆"))
        self.dbComboProvince.setItemText(4, _translate("MainWindow", "安徽"))
        self.dbComboProvince.setItemText(5, _translate("MainWindow", "河北"))
        self.dbComboProvince.setItemText(6, _translate("MainWindow", "河南"))
        self.dbComboProvince.setItemText(7, _translate("MainWindow", "湖北"))
        self.dbComboProvince.setItemText(8, _translate("MainWindow", "湖南"))
        self.dbComboProvince.setItemText(9, _translate("MainWindow", "山西"))
        self.dbComboProvince.setItemText(10, _translate("MainWindow", "山东"))
        self.dbComboProvince.setItemText(11, _translate("MainWindow", "陕西"))
        self.dbComboProvince.setItemText(12, _translate("MainWindow", "江苏"))
        self.dbComboProvince.setItemText(13, _translate("MainWindow", "江西"))
        self.dbEditBirth.setDisplayFormat(_translate("MainWindow", "yyyy-MM-dd"))
        self.label_5.setText(_translate("MainWindow", "出生日期"))
        self.dbComboSex.setItemText(0, _translate("MainWindow", "男"))
        self.dbComboSex.setItemText(1, _translate("MainWindow", "女"))
        self.label_3.setText(_translate("MainWindow", "性  别"))
        self.label_2.setText(_translate("MainWindow", "姓  名"))
        self.label_13.setText(_translate("MainWindow", "照  片"))
        self.dbLabPhoto.setText(_translate("MainWindow", "dbLabPhoto"))
        self.actOpenDB.setText(_translate("MainWindow", "打开数据库"))
        self.actOpenDB.setToolTip(_translate("MainWindow", "打开数据库"))
        self.actQuit.setText(_translate("MainWindow", "退出"))
        self.actQuit.setToolTip(_translate("MainWindow", "退出"))
        self.actRecFirst.setText(_translate("MainWindow", "首记录"))
        self.actRecFirst.setToolTip(_translate("MainWindow", "移到首记录"))
        self.actRecPrevious.setText(_translate("MainWindow", "前一记录"))
        self.actRecPrevious.setToolTip(_translate("MainWindow", "前一记录"))
        self.actRecNext.setText(_translate("MainWindow", "后一记录"))
        self.actRecNext.setToolTip(_translate("MainWindow", "后一记录"))
        self.actRecLast.setText(_translate("MainWindow", "尾记录"))
        self.actRecLast.setToolTip(_translate("MainWindow", "尾记录"))

import rec.res_rc_0702



class QmyMainWindow(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.setCentralWidget(self.ui.splitter)

        self.ui.tableView.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.ui.tableView.setSelectionMode(QAbstractItemView.SingleSelection)
        self.ui.tableView.setAlternatingRowColors(True)
        self.ui.tableView.verticalHeader().setDefaultSectionSize(22)
        self.ui.tableView.horizontalHeader().setDefaultSectionSize(60)

    @pyqtSlot()
    def on_actOpenDB_triggered(self):
        dbFilename, flt = QFileDialog.getOpenFileName(self, "选择数据库文件", "", "SQL Lite数据库(*.db *.db3)")
        if(dbFilename == ''):
            return

        self.DB = QSqlDatabase.addDatabase("QSQLITE")
        self.DB.setDatabaseName(dbFilename)
        if self.DB.open():
            self.__openTable()
        else:
            QMessageBox.warning(self, "错误", "打开数据库失败")

    def __openTable(self):
        self.qryModel = QSqlQueryModel(self)
        self.qryModel.setQuery('''SELECT empNo, Name, Gender, Birthday, Province, Department, Salary FROM employee ORDER BY empNo''')
        if self.qryModel.lastError().isValid():
            QMessageBox.critical(self, "错误", "数据表查询错误，错误信息\n"+self.qryModel.lastError().text())
            return
        self.ui.statusBar.showMessage("记录条数:%d" % self.qryModel.rowCount())
        self.__getFieldNames()

        self.qryModel.setHeaderData(0, Qt.Horizontal, "工号")
        self.qryModel.setHeaderData(1, Qt.Horizontal, "姓名")
        self.qryModel.setHeaderData(2, Qt.Horizontal, "性别")
        self.qryModel.setHeaderData(3, Qt.Horizontal, "出生日期")
        self.qryModel.setHeaderData(4, Qt.Horizontal, "省份")
        self.qryModel.setHeaderData(5, Qt.Horizontal, "部门")
        self.qryModel.setHeaderData(6, Qt.Horizontal, "工资")

        self.mapper = QDataWidgetMapper()
        self.mapper.setModel(self.qryModel)
        self.mapper.addMapping(self.ui.dbSpinEmpNo, 0)
        self.mapper.addMapping(self.ui.dbEditName, 1)
        self.mapper.addMapping(self.ui.dbComboSex, 2)
        self.mapper.addMapping(self.ui.dbEditBirth, 3)
        self.mapper.addMapping(self.ui.dbComboProvince, 4)
        self.mapper.addMapping(self.ui.dbComboDep, 5)
        self.mapper.addMapping(self.ui.dbSpinSalary, 6)
        self.mapper.toFirst()

        self.selModel = QItemSelectionModel(self.qryModel)
        self.selModel.currentRowChanged.connect(self.do_currentRowChanged)

        self.ui.tableView.setModel(self.qryModel)
        self.ui.tableView.setSelectionModel(self.selModel)

        self.ui.actOpenDB.setEnabled(False)

    def __refreshTableView(self):
        index = self.mapper.currentIndex()
        curIndex = self.qryModel.index(index, 1)
        self.selModel.clearSelection()
        self.selModel.setCurrentIndex(curIndex, QItemSelectionModel.Select)


    def __getFieldNames(self):
        emptyRec = self.qryModel.record()
        self.fldNum = {}
        for i in range(emptyRec.count()):
            fieldName = emptyRec.fieldName(i)
            self.fldNum.setdefault(fieldName)
            self.fldNum[fieldName] = i
        print(self.fldNum)

    @pyqtSlot()
    def on_actRecFirst_triggered(self):
        self.mapper.toFirst()
        self.__refreshTableView()

    @pyqtSlot()
    def on_actRecPrevious_triggered(self):
        self.mapper.toPrevious()
        self.__refreshTableView()

    @pyqtSlot()
    def on_actRecNext_triggered(self):
        self.mapper.toNext()
        self.__refreshTableView()

    @pyqtSlot()
    def on_actRecLast_triggered(self):
        self.mapper.toLast()
        self.__refreshTableView()

    def do_currentRowChanged(self, current, previous):
        if(current.isValid()==False):
            self.ui.dbLabPhoto.clear()
            return
        self.mapper.setCurrentIndex(current.row())
        first=(current.row()==0)
        last=(current.row()==self.qryModel.rowCount()-1)
        self.ui.actRecFirst.setEnabled(not first)
        self.ui.actRecPrevious.setEnabled(not first)
        self.ui.actRecNext.setEnabled(not last)
        self.ui.actRecLast.setEnabled(not last)

        curRec = self.qryModel.record(current.row())
        empNo = curRec.value("EmpNo")

        query = QSqlQuery(self.DB)
        query.prepare('''SELECT EmpNo, Memo, Photo FROM employee WHERE EmpNo = :ID''')
        query.bindValue(":ID", empNo)
        if not query.exec():
            QMessageBox.critical(self, "错误", "执行SQL语句错误\n"+query.lastError().text())
            return
        else:
            query.first()

        picData = query.value("Photo")
        if(picData==None):
            self.ui.dbLabPhoto.clear()
        else:
            pic = QPixmap()
            pic.loadFromData(picData)
            W = self.ui.dbLabPhoto.size().width()
            self.ui.dbLabPhoto.setPixmap(pic.scaledToWidth(W))

        memoData = query.value("Memo")
        self.ui.dbEditMemo.setPlainText(memoData)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    mw = QmyMainWindow()
    mw.show()
    sys.exit(app.exec_(), )
